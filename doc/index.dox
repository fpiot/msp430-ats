/*! \mainpage BSP430

\section Introduction

BSP430 is a library of routines coded to provide both a hardware
presentation layer and a hardware abstraction layer to interface MSP430
processors to FreeRTOS applications.

See \ref coding.

\subsection hpl Hardware Presentation Layer

The hardware presentation layer is a minimal abstraction of the underlying
peripheral registers.  No attempt is made to provide functions that do what
is normally done by setting and clearing bits in peripheral registers.

The only generic abstraction is for peripherals that commonly have multiple
instances on a single device (timers, UARTs, digital i/o ports).  The
abstraction comprises a structure definition which overlays an
instance-specific region of the peripheral address space, allowing the same
code to operate on any instance of the peripheral on that device.

Where the correct configuration for the registers of a peripheral is a
complex calculation that is specific to a peripheral variant, the HPL
includes functions to accomplish this configuration.  Examples include
calculation of register settings to achieve a particular system clock
frequency or to communicate over a UART at a particular baud rate.

\subsection hal Hardware Abstraction Layer

Where a common function uses peripheral-specific implementations, an
abstraction layer hides this from application code.  An example is serial
communication on a UART, whether that UART be provided by a USART, USI,
USCI, USCI_AB, USCI_A, or eUSCI_A peripheral.


clocks:

bc2       2xx       basic clock module+                          BC2
cs	  FR5xx     clock system                                 CS
fllplus   4xx       frequency-locked loop clock system           FLLPLUS, FLLPLUS_SMALL
ucs	  5xx/6xx   universal clock system                       UCS, UCS_RF

timer     all	    Timer_A and Timer_B                          TA#, TB#, T#A#, T#B#

usart     2xx       universal sync/async receive/transmit        USART
usi       2xx       universal serial interface                   USI
usci_ab	  2xx/4xx   universal serial communications interface    USCI, USCI_AB#
usci      5xx/6xx   universal serial communications interface    USCI_A#, USCI_B#
euscia    FR5xx     enhanced USCI                                EUSCI_A#
euscib    FR5xx     enhanced USCI                                EUSCI_B#

sys       5xx/6xx   system                                       SYS
pmm	  5xx/6xx   power management module			 PMM, PMM_FR5xx, PMM_FRAM

\subsection examples Examples
\subsubsection ex_bootstrap Bootstrap Support Programs
The following examples lead you through the basic capabilities of BSP430,
following the same path that you would use if you were adding support for a
new platform.

\li \ref ex_bootstrap_nop confirms that your environment is prepared to
build an application for a particular platform
\li \ref ex_bootstrap_blink confirms that your platform can blink LEDs
\li \ref ex_bootstrap_clocks brings out clock signals to test points
\li \ref ex_bootstrap_console prints output to the platform serial
connection at 9600 baud 8N1
\li \ref ex_bootstrap_echo confirms that you can provide input through the
serial port, by echoing back the characters you type
\li \ref ex_bootstrap_button validates the secondary input path using a
button on the board
\li \ref ex_bootstrap_lpm is used to configure the board into low power
mode, verifying that the numbers in the data sheet are achievable
\li \ref ex_bootstrap_applpm is used to interactively evaluate different low
power modes with and without the peripherals being disabled
</ul> 

\subsubsection ex_sensors Sensors

\li \ref ex_sensors_ds18b20 demonstrates temperature measurement with the
DS18B20 (or similar) 1-wire temperature sensor
\li \ref ex_sensors_tmp102 demonstrates the I2C interface with a TI TMP102
temperature sensor
\li \ref ex_sensors_hh10d demonstrates measuring the frequency of an input
signal using the Hope RF Humidity Sensor

\subsubsection ex_misc Miscellaneous Capabilities

\li \ref ex_rfem_ccid demonstrates the SPI interface by reading the
identification information from a ChipCon evalation module inserted into the
RF-EVM socket on any of a number of TI experimenter boards
</ul>
*/
